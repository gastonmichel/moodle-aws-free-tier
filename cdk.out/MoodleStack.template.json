{
  "Resources": {
    "MoodleVpc895D09D1": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/Resource"
      }
    },
    "MoodleVpcPublicSubnet1Subnet47E239D7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet1/Subnet"
      }
    },
    "MoodleVpcPublicSubnet1RouteTable81E6DEDE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet1/RouteTable"
      }
    },
    "MoodleVpcPublicSubnet1RouteTableAssociationB8D8EA28": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcPublicSubnet1RouteTable81E6DEDE"
        },
        "SubnetId": {
          "Ref": "MoodleVpcPublicSubnet1Subnet47E239D7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MoodleVpcPublicSubnet1DefaultRoute909064EA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcPublicSubnet1RouteTable81E6DEDE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MoodleVpcIGWEB666E00"
        }
      },
      "DependsOn": [
        "MoodleVpcVPCGWAF2FED52"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MoodleVpcPublicSubnet2Subnet804EDB4A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet2/Subnet"
      }
    },
    "MoodleVpcPublicSubnet2RouteTable78D40B03": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet2/RouteTable"
      }
    },
    "MoodleVpcPublicSubnet2RouteTableAssociationADE317AD": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcPublicSubnet2RouteTable78D40B03"
        },
        "SubnetId": {
          "Ref": "MoodleVpcPublicSubnet2Subnet804EDB4A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MoodleVpcPublicSubnet2DefaultRouteA4B6773B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcPublicSubnet2RouteTable78D40B03"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MoodleVpcIGWEB666E00"
        }
      },
      "DependsOn": [
        "MoodleVpcVPCGWAF2FED52"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MoodleVpcIsolatedSubnet1SubnetDE085280": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/IsolatedSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet1/Subnet"
      }
    },
    "MoodleVpcIsolatedSubnet1RouteTable67A52B29": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/IsolatedSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet1/RouteTable"
      }
    },
    "MoodleVpcIsolatedSubnet1RouteTableAssociation3C9B85B6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcIsolatedSubnet1RouteTable67A52B29"
        },
        "SubnetId": {
          "Ref": "MoodleVpcIsolatedSubnet1SubnetDE085280"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet1/RouteTableAssociation"
      }
    },
    "MoodleVpcIsolatedSubnet2SubnetE81DCE81": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/IsolatedSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet2/Subnet"
      }
    },
    "MoodleVpcIsolatedSubnet2RouteTable0327443F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc/IsolatedSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet2/RouteTable"
      }
    },
    "MoodleVpcIsolatedSubnet2RouteTableAssociation1C6FBBB1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MoodleVpcIsolatedSubnet2RouteTable0327443F"
        },
        "SubnetId": {
          "Ref": "MoodleVpcIsolatedSubnet2SubnetE81DCE81"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IsolatedSubnet2/RouteTableAssociation"
      }
    },
    "MoodleVpcIGWEB666E00": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/IGW"
      }
    },
    "MoodleVpcVPCGWAF2FED52": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        },
        "InternetGatewayId": {
          "Ref": "MoodleVpcIGWEB666E00"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleVpc/VPCGW"
      }
    },
    "RedisSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "subnet group for redis cluster",
        "SubnetIds": [
          {
            "Ref": "MoodleVpcIsolatedSubnet1SubnetDE085280"
          },
          {
            "Ref": "MoodleVpcIsolatedSubnet2SubnetE81DCE81"
          }
        ],
        "CacheSubnetGroupName": "moodle-redis-subnet-group"
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/RedisSubnetGroup"
      }
    },
    "RedisCluster": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "CacheNodeType": "cache.t2.micro",
        "Engine": "Redis",
        "NumCacheNodes": 1,
        "AZMode": "single-az",
        "CacheSubnetGroupName": "moodle-redis-subnet-group",
        "ClusterName": "moodle-redis-session-cache",
        "EngineVersion": "6.x",
        "PreferredAvailabilityZone": "us-east-1a",
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "MoodleVpc895D09D1",
              "DefaultSecurityGroup"
            ]
          }
        ]
      },
      "DependsOn": [
        "RedisSubnetGroup"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/RedisCluster"
      }
    },
    "RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "subnet group for rds instance",
        "SubnetIds": [
          {
            "Ref": "MoodleVpcIsolatedSubnet1SubnetDE085280"
          },
          {
            "Ref": "MoodleVpcIsolatedSubnet2SubnetE81DCE81"
          }
        ],
        "DBSubnetGroupName": "moodle-rds-subnet-group"
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/RDSSubnetGroup"
      }
    },
    "RDSDBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t2.micro",
        "AllocatedStorage": "20",
        "AvailabilityZone": "us-east-1a",
        "DBName": "moodledb",
        "DBSubnetGroupName": "moodle-rds-subnet-group",
        "Engine": "mysql",
        "EngineVersion": "8.0.23",
        "MasterUsername": "admin",
        "MasterUserPassword": "ljaksjfo983faljJK",
        "MultiAZ": false,
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "MoodleVpc895D09D1",
              "DefaultSecurityGroup"
            ]
          }
        ]
      },
      "DependsOn": [
        "RDSSubnetGroup"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/RDSDBInstance"
      }
    },
    "ECSCluster7D463CD4": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "moodle-ecs-cluster",
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityInstanceSecurityGroupE16DE08D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ],
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/InstanceSecurityGroup/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleB4ADB182": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/InstanceRole/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleDefaultPolicyE609726B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:DeregisterContainerInstance",
                "ecs:RegisterContainerInstance",
                "ecs:Submit*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECSCluster7D463CD4",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecs:Poll",
                "ecs:StartTelemetrySession"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "ECSCluster7D463CD4",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:DiscoverPollEndpoint",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleDefaultPolicyE609726B",
        "Roles": [
          {
            "Ref": "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleB4ADB182"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/InstanceRole/DefaultPolicy/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityInstanceProfile99011F62": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleB4ADB182"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/InstanceProfile"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityLaunchConfig54BCE313": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityInstanceProfile99011F62"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ECSClusterMoodleAutoScalingGroupCapacityInstanceSecurityGroupE16DE08D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\necho ECS_CLUSTER=",
                {
                  "Ref": "ECSCluster7D463CD4"
                },
                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleDefaultPolicyE609726B",
        "ECSClusterMoodleAutoScalingGroupCapacityInstanceRoleB4ADB182"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/LaunchConfig"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityASG53936BCD": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "AutoScalingGroupName": "moodle-asg",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLaunchConfig54BCE313"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "MoodleVpcPublicSubnet1Subnet47E239D7"
          },
          {
            "Ref": "MoodleVpcPublicSubnet2Subnet804EDB4A"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingReplacingUpdate": {
          "WillReplace": true
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/ASG"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleB73C2CCA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/DrainECSHook/Function/ServiceRole/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicyBB1A209C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeHosts"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "autoscaling:CompleteLifecycleAction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":autoscaling:us-east-1:841690643466:autoScalingGroup:*:autoScalingGroupName/",
                    {
                      "Ref": "ECSClusterMoodleAutoScalingGroupCapacityASG53936BCD"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecs:DescribeContainerInstances",
                "ecs:DescribeTasks"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "ECSCluster7D463CD4",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:ListContainerInstances",
                "ecs:SubmitContainerStateChange",
                "ecs:SubmitTaskStateChange"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ECSCluster7D463CD4",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecs:UpdateContainerInstancesState",
                "ecs:ListTasks"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "ECSCluster7D463CD4",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicyBB1A209C",
        "Roles": [
          {
            "Ref": "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleB73C2CCA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunction39788740": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n  \n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \"\"\"Fetch tasks for a container instance ARN.\"\"\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n  \n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n    \n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleB73C2CCA",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "CLUSTER": {
              "Ref": "ECSCluster7D463CD4"
            }
          }
        },
        "Handler": "index.lambda_handler",
        "Runtime": "python3.6",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ],
        "Timeout": 310
      },
      "DependsOn": [
        "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicyBB1A209C",
        "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionServiceRoleB73C2CCA"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/DrainECSHook/Function/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionAllowInvokeMoodleStackECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopic6D8401AEF8A03D2C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunction39788740",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopicD9596B0A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/DrainECSHook/Function/AllowInvoke:MoodleStackECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopic6D8401AE"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunctionTopicF2B611CF": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopicD9596B0A"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "ECSClusterMoodleAutoScalingGroupCapacityDrainECSHookFunction39788740",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/DrainECSHook/Function/Topic/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRole6B0B31A2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "autoscaling.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/LifecycleHookDrainHook/Role/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy13FEF533": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopicD9596B0A"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy13FEF533",
        "Roles": [
          {
            "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRole6B0B31A2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/LifecycleHookDrainHook/Role/DefaultPolicy/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopicD9596B0A": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/LifecycleHookDrainHook/Topic/Resource"
      }
    },
    "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookBC1E5052": {
      "Type": "AWS::AutoScaling::LifecycleHook",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityASG53936BCD"
        },
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 300,
        "NotificationTargetARN": {
          "Ref": "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookTopicD9596B0A"
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRole6B0B31A2",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy13FEF533",
        "ECSClusterMoodleAutoScalingGroupCapacityLifecycleHookDrainHookRole6B0B31A2"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/ECSCluster/MoodleAutoScalingGroupCapacity/LifecycleHookDrainHook/Resource"
      }
    },
    "MoodleFileSystem5390A989": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleFileSystem"
          }
        ],
        "LifecyclePolicies": [
          {
            "TransitionToIA": "AFTER_14_DAYS"
          }
        ],
        "PerformanceMode": "generalPurpose",
        "ThroughputMode": "bursting"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleFileSystem/Resource"
      }
    },
    "MoodleFileSystemEfsSecurityGroup46B96A5B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MoodleStack/MoodleFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "MoodleStack/MoodleFileSystem"
          }
        ],
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleFileSystem/EfsSecurityGroup/Resource"
      }
    },
    "MoodleFileSystemEfsMountTarget15E09DA83": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "MoodleFileSystem5390A989"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MoodleFileSystemEfsSecurityGroup46B96A5B",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "MoodleVpcIsolatedSubnet1SubnetDE085280"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleFileSystem/EfsMountTarget1"
      }
    },
    "MoodleFileSystemEfsMountTarget2DCB79B2B": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "MoodleFileSystem5390A989"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MoodleFileSystemEfsSecurityGroup46B96A5B",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "MoodleVpcIsolatedSubnet2SubnetE81DCE81"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleFileSystem/EfsMountTarget2"
      }
    },
    "MoodleTaskDefinitionTaskRole8A134EB8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/TaskRole/Resource"
      }
    },
    "MoodleTaskDefinitionTaskRoleDefaultPolicyF9471FA4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "logs:DescribeLogGroups",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MoodleTaskDefinitionTaskRoleDefaultPolicyF9471FA4",
        "Roles": [
          {
            "Ref": "MoodleTaskDefinitionTaskRole8A134EB8"
          }
        ]
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/TaskRole/DefaultPolicy/Resource"
      }
    },
    "MoodleTaskDefinition674933B6": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "DB_TYPE",
                "Value": "mysql"
              },
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "RDSDBInstance",
                    "Endpoint.Address"
                  ]
                }
              },
              {
                "Name": "MOODLE_DB_PORT",
                "Value": {
                  "Fn::GetAtt": [
                    "RDSDBInstance",
                    "Endpoint.Port"
                  ]
                }
              },
              {
                "Name": "DB_NAME",
                "Value": "moodledb"
              },
              {
                "Name": "DB_USER",
                "Value": "admin"
              },
              {
                "Name": "DB_PASS",
                "Value": "ljaksjfo983faljJK"
              },
              {
                "Name": "WEB_HOST",
                "Value": "https://35.170.245.46"
              },
              {
                "Name": "REDIS_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "RedisCluster",
                    "RedisEndpoint.Address"
                  ]
                }
              },
              {
                "Name": "REDIS_PORT",
                "Value": {
                  "Fn::GetAtt": [
                    "RedisCluster",
                    "RedisEndpoint.Port"
                  ]
                }
              }
            ],
            "Essential": true,
            "Image": "moodlehq/moodle-php-apache:7.4",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MoodleTaskDefinitionMoodleContainerLogGroup4F46C046"
                },
                "awslogs-stream-prefix": "moodle-ecs-ec2",
                "awslogs-region": "us-east-1"
              }
            },
            "Memory": 500,
            "MountPoints": [
              {
                "ContainerPath": "/var/moodle",
                "ReadOnly": false,
                "SourceVolume": "moodle-efs"
              }
            ],
            "Name": "MoodleContainer",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MoodleTaskDefinitionExecutionRole7421BBB0",
            "Arn"
          ]
        },
        "Family": "MoodleStackMoodleTaskDefinition8A2F1631",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "MoodleTaskDefinitionTaskRole8A134EB8",
            "Arn"
          ]
        },
        "Volumes": [
          {
            "Name": "moodle-efs",
            "EfsVolumeConfiguration": {
              "FileSystemId": {
                "Ref": "MoodleFileSystem5390A989"
              }
            }
          }
        ]
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/Resource"
      }
    },
    "MoodleTaskDefinitionMoodleContainerLogGroup4F46C046": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 5
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/MoodleContainer/LogGroup/Resource"
      }
    },
    "MoodleTaskDefinitionExecutionRole7421BBB0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/ExecutionRole/Resource"
      }
    },
    "MoodleTaskDefinitionExecutionRoleDefaultPolicy6B92855D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MoodleTaskDefinitionMoodleContainerLogGroup4F46C046",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MoodleTaskDefinitionExecutionRoleDefaultPolicy6B92855D",
        "Roles": [
          {
            "Ref": "MoodleTaskDefinitionExecutionRole7421BBB0"
          }
        ]
      },
      "DependsOn": [
        "MoodleFileSystemEfsMountTarget15E09DA83",
        "MoodleFileSystemEfsMountTarget2DCB79B2B",
        "MoodleFileSystemEfsSecurityGroup46B96A5B",
        "MoodleFileSystem5390A989"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleTaskDefinition/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "MoodleLoadBalancerSG8BF95813": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MoodleStack/MoodleLoadBalancerSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow outbound 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleLoadBalancerSG/Resource"
      }
    },
    "MoodleLoadBalancerSGtoMoodleStackMoodleServiceSecurityGroup149F09EA80970AFC55": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MoodleLoadBalancerSG8BF95813",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to MoodleStackMoodleServiceSecurityGroup149F09EA:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MoodleServiceSecurityGroupE8A73835",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleLoadBalancerSG/to MoodleStackMoodleServiceSecurityGroup149F09EA:80"
      }
    },
    "MoodleLoadBalancerAB4DA73D": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MoodleLoadBalancerSG8BF95813",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "MoodleVpcPublicSubnet1Subnet47E239D7"
          },
          {
            "Ref": "MoodleVpcPublicSubnet2Subnet804EDB4A"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "MoodleVpcPublicSubnet1DefaultRoute909064EA",
        "MoodleVpcPublicSubnet2DefaultRouteA4B6773B"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleLoadBalancer/Resource"
      }
    },
    "MoodleLoadBalancerMoodleHttpListener30671034": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MoodleLoadBalancerMoodleHttpListenerMoodleHttpServiceTargetGroup587A147B"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MoodleLoadBalancerAB4DA73D"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleLoadBalancer/MoodleHttpListener/Resource"
      }
    },
    "MoodleLoadBalancerMoodleHttpListenerMoodleHttpServiceTargetGroup587A147B": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthyThresholdCount": 3,
        "Matcher": {
          "HttpCode": "200-299,301,302"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleLoadBalancer/MoodleHttpListener/MoodleHttpServiceTargetGroup/Resource"
      }
    },
    "MoodleServiceE7F32F36": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ECSCluster7D463CD4"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "EnableExecuteCommand": true,
        "HealthCheckGracePeriodSeconds": 900,
        "LaunchType": "EC2",
        "LoadBalancers": [
          {
            "ContainerName": "MoodleContainer",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "MoodleLoadBalancerMoodleHttpListenerMoodleHttpServiceTargetGroup587A147B"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MoodleServiceSecurityGroupE8A73835",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "MoodleVpcIsolatedSubnet1SubnetDE085280"
              },
              {
                "Ref": "MoodleVpcIsolatedSubnet2SubnetE81DCE81"
              }
            ]
          }
        },
        "SchedulingStrategy": "REPLICA",
        "TaskDefinition": {
          "Ref": "MoodleTaskDefinition674933B6"
        }
      },
      "DependsOn": [
        "MoodleLoadBalancerMoodleHttpListenerMoodleHttpServiceTargetGroup587A147B",
        "MoodleLoadBalancerMoodleHttpListener30671034"
      ],
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleService/Service"
      }
    },
    "MoodleServiceSecurityGroupE8A73835": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MoodleStack/MoodleService/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "MoodleVpc895D09D1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleService/SecurityGroup/Resource"
      }
    },
    "MoodleServiceSecurityGroupfromMoodleStackMoodleLoadBalancerSG9B221145801FE797EB": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from MoodleStackMoodleLoadBalancerSG9B221145:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "MoodleServiceSecurityGroupE8A73835",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MoodleLoadBalancerSG8BF95813",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/MoodleService/SecurityGroup/from MoodleStackMoodleLoadBalancerSG9B221145:80"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SyW7bMBD9ltwZpnERoL3VlrMYcAHBMnKn6JE8tUQKXBwIgv69I2p1AuTEmTdvtjd85I+rJ/7j7o/4sPfydHlopDbAm8QJeWEHsNobCSzSyjrjpWNRpmJhRAkOTOeMlJZ1FRqQK968V7ILvccRi31aoEx8qiDkztZBewdHkRYw4zO2tlZLFA61msgsNngVDuYaO0VTkP1K6Ieoh6aDt3a0w7kE5VgC0ht09avRvgrtvgWecwPWfoF3KuAtg0JYh5Kqk1LT8FOtqAtEhbc0XMvMyQbSdvOJtt3sSFShOu1AdqQ+JZQYzGe5Ogp72UKGCkcxPiNaOYEKzAKjvATMFWUvbm/SibzTVooCVc6bNTlJ70wz7YVX8kwVM8y9meT/Qt1jBrKWBbxpfQmJS6BlKEreHHR/2/DGmv5BuNBsjfvHRmdY0HyFKNOT4M0LTTH2XtoxmBKtJa9lVpFkJKmVBquRcOMfdYXhIwaDRM4o44UaJTWJW4biN95f7ZU7CpODo1l0TvS9Xogz2NMHKLQ4paKgFUiYK338dVXRbkG2PcU2IdZf9MZf8pC6q4Ez2ot4P840w8Jt25bFtTtr9fCT/+K/7/5ZxHtDK2AJ/NC//wGm6zB+4AMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "MoodleStack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    }
  }
}